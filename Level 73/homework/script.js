// JavaScript-ში scope ნიშნავს იმას, სადაც და როგორ შეგიძლიათ გამოიყენოთ ცვლადი ან 
// ფუნქცია კოდში. სხვა სიტყვებით რომ ვთქვათ, ეს განაპირობებს, სად შეგიძლიათ წვდეთ 
// ცვლადებს და ფუნქციებს, ანუ თუ როგორია მათი "მომავალი".

// Global scope : როცა ცვლადი ან ფუნქცია არის პროგრამის 
// ყველაზე მაღალ დონეზე, ანუ არ არის არანაირი ფუნქციის ან ბლოკის შიგნით. 
// ასეთი ცვლადები და ფუნქციები ხელმისაწვდომია ნებისმიერ ადგილზე კოდში.

// Local scope : როცა ცვლადი ან ფუნქცია განსაზღვრულია 
// მხოლოდ კონკრეტულ ფუნქციაში, მხოლოდ ამ ფუნქციაში იქნება ხელმისაწვდომი.
//  სხვა ფუნქციებში ან კოდის სხვა ნაწილში ის ვერ იქნებოდა გამოყენებული.

// Block scope (ბლოკური სფერო): როცა ცვლადი შექმნილია კონკრეტულ 
// ბლოკში, მაგალითად, if ან for ციკლში, ის მხოლოდ ამ ბლოკში იქნება 
// ხელმისაწვდომი. მაგალითად, let და const ქმნიან ბლოკურ სფეროს, რაც იმას 
// ნიშნავს, რომ ისინი მხოლოდ იმ კონკრეტულ ბლოკში მუშაობენ, სადაც შექმნიან.

// <!--მოგვიანებიით დავასრულებ --> */


// 